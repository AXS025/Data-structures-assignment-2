#ADD THE REST OF THE CLASSES
from collections import deque


class ListNode:
    def __init__(self, data=None):
        self.data = data
        self.next = None
        self.prev = None


class LinkedList:
    def __init__(self):
        self.start = None

    def add(self, value):
        new_item = ListNode(value)
        if not self.start:
            self.start = new_item
        else:
            iterator = self.start
            while iterator.next:
                iterator = iterator.next
            iterator.next = new_item
            new_item.prev = iterator

    def rem(self, value):
        iterator = self.start
        while iterator:
            if iterator.data == value:
                if iterator.prev:
                    iterator.prev.next = iterator.next
                else:
                    self.start = iterator.next
                if iterator.next:
                    iterator.next.prev = iterator.prev
                return True
            iterator = iterator.next
        return False

    def __iter__(self):
        self.current = self.start
        return self

    def __next__(self):
        if self.current:
            data = self.current.data
            self.current = self.current.next
            return data
        self.current = None
        return None


class Patient:
    def __init__(self, id_of_patient, name, age, medical_history, condition, date_of_Admission):
        self.id_of_patient = id_of_patient
        self.name = name
        self.age = age
        self.medical_history = medical_history
        self.condition = condition
        self.date_of_Admission = date_of_Admission
        self.appointment = None
        self.prescriptions = []

    def __str__(self):
        return "ID: " + str(self.id_of_patient) + ", Name: " + self.name + ", Age: " + str(
            self.age) + ", Condition: " + self.condition + ", Date of Admission: " + str(self.date_of_Admission)

